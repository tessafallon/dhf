/*
 * Avalon Media System authenticated RTMP streaming application for
 * Adobe Media Server.
 *
 * Add the following keys to your <ams_install_home>/conf/ams.ini:
 *		AVALON.AUTH_URL = http://localhost/authorize
 *		AVALON.STREAM_PATH = /opt/adobe/ams/webroot/avalon
 */

application.onAppStart = function()
{
	// Logging
	trace("Starting Avalon Streaming app...");
	this.avalonAuthUrl = application.config.avalonAuthUrl;
	trace("Requests will be authenticated against " + this.avalonAuthUrl);
	trace("...loading completed.");
}

application.onConnect = function( p_client, p_autoSenseBW )
{
	//Add security here
	p_client.writeAccess = ""; // prevents creating shared object or live streams.
	p_client.readAccess = "";  // no access by default

	var xhttp = new LoadVars();
	xhttp.decode(p_client.uri.split("?")[1]);
	if (!xhttp.hasOwnProperty('token')) {
		trace('Missing token in request.');
		application.rejectConnection(p_client);
		return false;
	}
	
	var authed = false;
	xhttp.onHTTPStatus = function(status) {
		trace('Received ' + status);
		switch (status) {
			case 202: 
				trace("Authorized")
				authed = true;
				break;
			case 403: 
				trace("Unauthorized")
				authed = false;
				break;
		};
	}
	
	xhttp.onLoad = function() {
		if (authed) {
			// grant access to the specific mediapackage directories authorized
			p_client.readAccess = xhttp['authorized']; 
		}
		// Accept the connection no matter what; the denial will happen when the stream is requested
		application.acceptConnection(p_client);
		if (p_client.readAccess.length > 0) {
			trace("Client can read " + p_client.readAccess);
		} else {
			trace("Client cannot read anything");
		}

		if (p_autoSenseBW)
			p_client.checkBandwidth();
		else
			p_client.call("onBWDone"); 
	}

	var authUrl = application.avalonAuthUrl;
	trace('Authorizing against ' + authUrl);
	xhttp.addRequestHeader('accept','application/x-www-urlform-encoded')
	xhttp.sendAndLoad(authUrl,xhttp);
	return null;
}

